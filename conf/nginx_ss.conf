#!/bin/bash
cat <<EOF
proxy_cache_path /var/cache levels=1:2 keys_zone=default_cache:10m max_size=500m use_temp_path=off;

error_log /wwwroot${QR_Path}/error.txt;
access_log /wwwroot${QR_Path}/access.txt proxied;

upstream ss_backend {
    server 127.0.0.1:2333;
    keepalive 64;
}

server {
    listen       ${PORT};
    listen       [::]:${PORT};

    location ~* "^(?!${QR_Path}|/${V2_Path}).+" {
        proxy_pass "${Proxy_Path}";
        proxy_cache default_cache;
        proxy_buffering on;
        proxy_cache_valid 550h;
        proxy_cache_use_stale error timeout http_500
                              http_502 http_503 http_504;
        limit_except GET { deny all; }

        # suppress origin caching headers:
        proxy_ignore_headers Cache-Control;
        proxy_ignore_headers Expires;
        proxy_ignore_headers X-Accel-Expires;
        proxy_ignore_headers Set-Cookie;
        proxy_ignore_headers Vary;
        proxy_hide_header Cache-Control;
        proxy_hide_header Expires;
        proxy_hide_header X-Accel-Expires;
        proxy_hide_header Set-Cookie;
        proxy_hide_header Vary;

        # don't expose reverse proxy headers to origin:
        proxy_set_header Via "";
        proxy_set_header X-Real-IP "";
        proxy_set_header X-Forwarded-For "";
        proxy_set_header X-Forwarded-Proto "";
        proxy_set_header X-Forwarded-Port "";
        proxy_set_header X-Request-Id "";
        proxy_set_header X-Request-Start "";
        proxy_set_header Authorization "";
        proxy_set_header Connect-Time "";
        proxy_set_header Total-Route-Time "";
        proxy_set_header Upgrade-Insecure-Requests "";
    }
    location ${QR_Path} {
        root /wwwroot;
        auth_basic "Protected area";
        auth_basic_user_file /etc/nginx/pwd;
        rewrite ^/$ /index.html permanent;
    }
    location = /robots.txt {
        alias /wwwroot${QR_Path}/robots.txt;
    }
    location ~* ^/${V2_Path}$ {
        access_log off;
        if (\$http_upgrade != "websocket") { # WebSocket return this when negotiation fails 404
            return 404;
        }
        proxy_redirect off;
        proxy_pass http://ss_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$http_host;
        # Show real IP in v2ray access.log
        # proxy_set_header X-Real-IP \$remote_addr;
        # proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    }
}
EOF
